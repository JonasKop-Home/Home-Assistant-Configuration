apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Chart.Name }}
  labels:
    {{- include "home-assistant.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "home-assistant.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "home-assistant.selectorLabels" . | nindent 8 }}
    spec:
      hostNetwork: true
      dnsPolicy: ClusterFirstWithHostNet
      initContainers:
        - name: create-users
          image: {{ include "home-assistant.image" . }}
          command:
          - sh
          - -c
          - |
            set -eu
            addgroup "$NAME" -g "$ID"
            adduser "$NAME" -u "$ID" -G "$NAME" -D -H
            cp -rf /etc/passwd /etc/group /init-tmp/
            chown -R "$NAME:$NAME" /init-tmp

            wget -O - https://get.hacs.xyz | bash -

            apk add envsubst
            envsubst < /tmp/secrets.yaml > /config/secrets.yaml
          env:
            - name: NAME
              value: home-assistant
            - name: ID
              value: "1000"
            - name: POSTGRES_USERNAME
              valueFrom:
                secretKeyRef:
                  name: home-assistant.home-assistant-postgresql.credentials.postgresql.acid.zalan.do
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: home-assistant.home-assistant-postgresql.credentials.postgresql.acid.zalan.do
                  key: password
          volumeMounts:
            - name: init-tmp
              mountPath: /init-tmp
            - name: secrets
              mountPath: /tmp/secrets.yaml
              subPath: secrets.yaml
            - name: appconfig
              mountPath: /config
      containers:
        - name: home-assistant
          securityContext:
            runAsUser: 1000
            runAsGroup: 1000
          image: {{ include "home-assistant.image" . }}
          ports:
            - name: http
              containerPort: 8123
              protocol: TCP
          volumeMounts:
            - name: init-tmp
              mountPath: /etc/passwd
              subPath: passwd
            - name: init-tmp
              mountPath: /etc/group
              subPath: group
            - name: secrets
              mountPath: /config/serviceAccount.json
              subPath: serviceAccount.json
            {{- range $path, $_ := .Files.Glob "configuration/*" }}
            - name: configs
              mountPath: /config/{{ $path | base }}
              subPath: {{ $path | base }}
            {{- end }}
            - name: appconfig
              mountPath: /config
      volumes:
        - name: init-tmp
          emptyDir: {}
        - name: secrets
          secret:
            secretName: {{ .Chart.Name }}
        - name: configs
          configMap:
            name: {{ .Chart.Name }}
        - name: appconfig
          persistentVolumeClaim:
            claimName: {{ .Chart.Name }}
      securityContext:
        fsGroup: 1000
